---
- name: Include OS specific vars
  ansible.builtin.include_vars: "{{ lookup('first_found', params) }}"
  vars:
    params:
      files:
        - "{{ ansible_os_family | lower }}-{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
        - "{{ ansible_os_family | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
        - "{{ ansible_os_family | lower }}-{{ ansible_distribution | lower }}.yml"
        - "{{ ansible_os_family | lower }}.yml"
        - default.yml
      paths:
        - "{{ role_path }}/vars"

- name: Gather module packages
  ansible.builtin.set_fact:
    icingaweb2_packages: "{{ icingaweb2_packages + [ icingaweb2_module_packages[item.key] ] }}"
  loop: "{{ icingaweb2_modules | dict2items }}"
  when: icingaweb2_modules is defined and icingaweb2_module_packages[item.key] is defined and item.value.enabled is true and item.value.source == "package"

- name: Gather source packages from git
  ansible.builtin.set_fact:
    icingaweb2_git_packages: "{{ icingaweb2_git_packages + [item] }}"
  loop: "{{ icingaweb2_modules | dict2items }}" 
  when: icingaweb2_modules is defined and item.value.enabled is true and item.value.source.startswith("git")

- name: Include OS specific installation
  ansible.builtin.include_tasks: "install_on_{{ ansible_os_family | lower }}.yml"

- name: Debug icingaweb2_packages
  debug:
      msg: "{{ (item.value.source | split(', ') | last) }}"
  loop: "{{ icingaweb2_git_packages }}"
  # when: item.value.source.startswith('git')
      # msg: "{{ icingaweb2_git_packages['test_module']['value'] }}"

- name: Install Icingaweb2 Module from Git
  ansible.builtin.git:
    repo: "{{ (item.value.source | split(', '))[1] }}"
    dest: "{{ icingaweb2_config['global']['module_path'] }}/{{ item.key }}"
    version: "{{ ((item.value.source | split(', ') | last) | default('HEAD')) }}"
  loop: "{{ icingaweb2_git_packages }}"
  when: icingaweb2_modules is defined and item.value.enabled is true and item.value.source.startswith("git")

- name: Manage Icinga Web 2 config
  ansible.builtin.include_tasks: "manage_icingaweb_config.yml"

- name: Manage Icinga Web 2 DB
  ansible.builtin.include_tasks: "manage_icingaweb_{{ icingaweb2_db.type }}_db.yml"
  when: icingaweb2_db is defined

- name: Configure modules
  ansible.builtin.include_tasks: "modules/{{ item.key }}.yml"
  when: icingaweb2_modules is defined 
  # and item.value.custom is false
  loop: "{{ icingaweb2_modules | dict2items }}"

- name: Manage enabled/disabled modules
  ansible.builtin.file:
    src: "{{ icingaweb2_config.global.module_path + '/' + item.key if item.value.enabled|bool == true else omit }}"
    dest: "{{ icingaweb2_config_dir }}/enabledModules/{{ item.key }}"
    owner: "{{ icingaweb2_httpd_user }}"
    group: "{{ icingaweb2_group }}"
    state: "{{ 'link' if item.value.enabled|bool == true else 'absent' }}"
    force: yes
  when: icingaweb2_modules is defined
  loop: "{{ icingaweb2_modules | dict2items }}"
