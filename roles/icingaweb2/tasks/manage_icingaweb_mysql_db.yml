---

- name: Check Database Credentials
  ansible.builtin.assert:
    that:
      - icingaweb2_db['user'] is defined
      - icingaweb2_db['password'] is defined
    fail_msg: "No database credentials defined. Please set icingaweb2_db.<user|password> or a privileged user with icingaweb2_priv_db_<user|password>"
  when: icingaweb2_priv_db_password is undefined and icingaweb2_priv_db_user is undefined

- name: Set db user with admin privileges
  ansible.builtin.set_fact:
    _priv_db_user: "{{ icingaweb2_priv_db_user }}"
    _priv_db_pass: "{{ icingaweb2_priv_db_password }}"
  when: icingaweb2_priv_db_password is defined and icingaweb2_priv_db_user is defined

- name: Ensure Icinga Web
  block:
    - name: Build mysql command
      ansible.builtin.set_fact:
        _tmp_mysqlcmd: >-
          mysql {% if icingaweb2_db['host'] | default('localhost') != 'localhost'  %} -h "{{ icingaweb2_db['host'] }}" {%- endif %}
          {% if icingaweb2_db['port'] is defined %} -P "{{ icingaweb2_db['port'] }}" {%- endif %}
          {% if icingaweb2_db['ssl_mode'] is defined %} --ssl-mode "{{ icingaweb2_db['ssl_mode'] }}" {%- endif %}
          {% if icingaweb2_db['ssl_ca'] is defined %} --ssl-ca "{{ icingaweb2_db['ssl_ca'] }}" {%- endif %}
          {% if icingaweb2_db['ssl_cert'] is defined %} --ssl-cert "{{ icingaweb2_db['ssl_cert'] }}" {%- endif %}
          {% if icingaweb2_db['ssl_key'] is defined %} --ssl-key "{{ icingaweb2_db['ssl_key'] }}" {%- endif %}
          {% if icingaweb2_db['ssl_cipher'] is defined %} --ssl-cipher "{{ icingaweb2_db['ssl_cipher'] }}" {%- endif %}
          {% if icingaweb2_db['ssl_extra_options'] is defined %} {{ icingaweb2_db['ssl_extra_options'] }} {%- endif %}
          -u "{{ icingaweb2_priv_db_user | default(icingaweb2_db['user']) }}"
          -p"{{ icingaweb2_priv_db_password | default(icingaweb2_db['password']) }}"
          "{{ icingaweb2_db['name'] }}"

    - name: MySQL check for icingaweb db schema
      ansible.builtin.shell: >
        {{ _tmp_mysqlcmd }}
        -Ns -e "select * from icingaweb_user"
      failed_when: false
      changed_when: false
      check_mode: false
      register: _icingaweb2_db_schema

    - name: MySQL import icingaweb db schema
      ansible.builtin.shell: >
        {{ _tmp_mysqlcmd }}
        < /usr/share/icingaweb2/schema/mysql.schema.sql
      when: _icingaweb2_db_schema.rc != 0
      run_once: yes
  when: icingaweb2_db_import_schema | default(False)

- name: Ensure Icinga Web User
  block:
    - name: MySQL check for icingaweb db schema
      ansible.builtin.shell: >
        {{ _tmp_mysqlcmd }}
        -Ns -e "select name from icingaweb_user where name like '{{ icingaweb2_admin_username }}'"
      failed_when: false
      changed_when: false
      check_mode: false
      register: _icingaweb2_db_user

    - name: Ensure admin user exists
      ansible.builtin.shell: >-
        echo "INSERT INTO icingaweb_user (name, active, password_hash) VALUES ('{{ icingaweb2_admin_username }}', 1,
        '"`php -r 'echo password_hash("{{ icingaweb2_admin_password }}", PASSWORD_DEFAULT);'`"')" |  {{ _tmp_mysqlcmd }} -Ns
      when: _icingaweb2_db_user.stdout_lines | length <= 0
  when:
    - icingaweb2_admin_username is defined
    - icingaweb2_admin_password is defined
