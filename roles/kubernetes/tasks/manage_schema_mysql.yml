- name: MySQL import Kubernetes schema
  when: kubernetes_database_import_schema | default(False)
  block:
    - name: Build mysql command
      ansible.builtin.set_fact:
        mysqlcmd: >-
          mysql {% if kubernetes_database_host | default('localhost') != 'localhost' %} -h "{{ kubernetes_database_host }}" {%- endif %}
          {% if kubernetes_database_port is defined %} -P {{ kubernetes_database_port }} {%- endif %}
          {% if kubernetes_database_ca is defined %} --ssl-ca "{{ kubernetes_database_ca }}" {%- endif %}
          {% if kubernetes_database_cert is defined %} --ssl-cert "{{ kubernetes_database_cert }}" {%- endif %}
          {% if kubernetes_database_key is defined %} --ssl-key "{{ kubernetes_database_key }}" {%- endif %}
          -u "{{ kubernetes_database_user | default('kubernetes') }}"
          -p"{{ kubernetes_database_password }}"
          "{{ kubernetes_database_name | default('kubernetes') }}"

    - name: MySQL check for Kubernetes schema
      ansible.builtin.shell: >
        {{ mysqlcmd }}
        -Ns -e "select version from kubernetes_schema"
      failed_when: false
      changed_when: false
      check_mode: false
      register: _db_schema

    - name: MySQL import Kubernetes schema
      ansible.builtin.shell: >
        {{ mysqlcmd }}
        < {{ kubernetes_database_schema }}
      when: _db_schema.rc != 0
      check_mode: false
      run_once: true
