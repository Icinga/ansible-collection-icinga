---

- ansible.builtin.gather_facts:

- name: Include OS family specific vars
  ansible.builtin.include_vars: "{{ role_path }}/vars/{{ ansible_os_family }}.yml"

- name: Include OS distribution/version specific vars
  ansible.builtin.include_vars: "{{ lookup('first_found', params) }}"
  vars:
    params:
      files:
        - "{{ ansible_os_family }}-{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml"
        - "{{ ansible_os_family }}-{{ ansible_distribution }}.yml"
        - "{{ ansible_os_family }}-{{ ansible_distribution_major_version }}.yml"
        - "default.yml"
      paths:
        - "{{ role_path }}/vars"

- name: Clean up variable discrepancy - remove entries
  ansible.builtin.set_fact:
    monitoring_plugins_icinga_available_packages: "{{ monitoring_plugins_icinga_available_packages | difference(monitoring_plugins_icinga_available_packages_exclude) }}"
  when: monitoring_plugins_icinga_available_packages_exclude is defined

- name: Clean up variable discrepancy - add entries
  ansible.builtin.set_fact:
    monitoring_plugins_icinga_available_packages: "{{ monitoring_plugins_icinga_available_packages + monitoring_plugins_icinga_available_packages_include }}"
  when: monitoring_plugins_icinga_available_packages_include is defined

- name: Make sure that check plugins are requested and that they are defined
  ansible.builtin.assert:
    that:
      - monitoring_plugins_icinga_check_commands is defined
      - diff | length == 0
    fail_msg: "The following requested check command names (variable 'monitoring_plugins_icinga_check_commands') are not recognized as available check plugins on this host: {{ diff }}"
  vars:
    diff: "{{ monitoring_plugins_icinga_check_commands | default([]) | difference(monitoring_plugins_icinga_available_packages | map(attribute='name') | list) | difference(['all']) }}"

- name: Create list of packages to be installed
  ansible.builtin.set_fact:
    needed_packages: "{{ monitoring_plugins_icinga_available_packages | map(attribute='pkg_name') if 'all' in monitoring_plugins_icinga_check_commands else (needed_packages | default([]) + (monitoring_plugins_icinga_available_packages | selectattr('name', 'equalto', item) | map(attribute='pkg_name') | list)) | unique }}"
  loop: "{{ monitoring_plugins_icinga_check_commands }}"

- name: Create list of packages to be removed
  ansible.builtin.set_fact:
    unwanted_packages: "{{ monitoring_plugins_icinga_available_packages | map(attribute='pkg_name') | difference(needed_packages | default([])) }}"

- name: Install
  ansible.builtin.include_tasks: "install_on_{{ ansible_os_family }}.yml"
